{"ast":null,"code":"/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() {\n    this.constructor = child;\n  }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message = message;\n  this.expected = expected;\n  this.found = found;\n  this.location = location;\n  this.name = \"SyntaxError\";\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\npeg$subclass(peg$SyntaxError, Error);\npeg$SyntaxError.buildMessage = function (expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n    literal: function (expectation) {\n      return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n    },\n    \"class\": function (expectation) {\n      var escapedParts = \"\",\n        i;\n      for (i = 0; i < expectation.parts.length; i++) {\n        escapedParts += expectation.parts[i] instanceof Array ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1]) : classEscape(expectation.parts[i]);\n      }\n      return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n    },\n    any: function (expectation) {\n      return \"any character\";\n    },\n    end: function (expectation) {\n      return \"end of input\";\n    },\n    other: function (expectation) {\n      return expectation.description;\n    }\n  };\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n  function literalEscape(s) {\n    return s.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"').replace(/\\0/g, '\\\\0').replace(/\\t/g, '\\\\t').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/[\\x00-\\x0F]/g, function (ch) {\n      return '\\\\x0' + hex(ch);\n    }).replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) {\n      return '\\\\x' + hex(ch);\n    });\n  }\n  function classEscape(s) {\n    return s.replace(/\\\\/g, '\\\\\\\\').replace(/\\]/g, '\\\\]').replace(/\\^/g, '\\\\^').replace(/-/g, '\\\\-').replace(/\\0/g, '\\\\0').replace(/\\t/g, '\\\\t').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/[\\x00-\\x0F]/g, function (ch) {\n      return '\\\\x0' + hex(ch);\n    }).replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) {\n      return '\\\\x' + hex(ch);\n    });\n  }\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n      i,\n      j;\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n    descriptions.sort();\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n      default:\n        return descriptions.slice(0, -1).join(\", \") + \", or \" + descriptions[descriptions.length - 1];\n    }\n  }\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n  var peg$FAILED = {},\n    peg$startRuleFunctions = {\n      Start: peg$parseStart\n    },\n    peg$startRuleFunction = peg$parseStart,\n    peg$c0 = \"var\",\n    peg$c1 = peg$literalExpectation(\"var\", false),\n    peg$c2 = \"=\",\n    peg$c3 = peg$literalExpectation(\"=\", false),\n    peg$c4 = \";\",\n    peg$c5 = peg$literalExpectation(\";\", false),\n    peg$c6 = function () {\n      return {\n        type: \"VariableDeclaration\",\n        name: identifier,\n        value: expression\n      };\n    },\n    peg$c7 = function () {\n      return {\n        type: \"Assignment\",\n        name: identifier,\n        value: expression\n      };\n    },\n    peg$c8 = \"Print\",\n    peg$c9 = peg$literalExpectation(\"Print\", false),\n    peg$c10 = \"(\",\n    peg$c11 = peg$literalExpectation(\"(\", false),\n    peg$c12 = \")\",\n    peg$c13 = peg$literalExpectation(\")\", false),\n    peg$c14 = function () {\n      return {\n        type: \"PrintStatement\",\n        value: expression\n      };\n    },\n    peg$c15 = \"+\",\n    peg$c16 = peg$literalExpectation(\"+\", false),\n    peg$c17 = function (left, right) {\n      return {\n        type: \"Concatenation\",\n        left: left,\n        right: right\n      };\n    },\n    peg$c18 = \"\\\"\",\n    peg$c19 = peg$literalExpectation(\"\\\"\", false),\n    peg$c20 = function (chars) {\n      return {\n        type: \"StringLiteral\",\n        value: chars.join(\"\")\n      };\n    },\n    peg$c21 = \"\\\\\",\n    peg$c22 = peg$literalExpectation(\"\\\\\", false),\n    peg$c23 = /^[\"\\\\\" \"\"\"]/,\n    peg$c24 = peg$classExpectation([\"\\\"\", \"\\\\\", \"\\\"\", \" \", \"\\\"\", \"\\\"\", \"\\\"\"], false, false),\n    peg$c25 = /^[\"\"\"]/,\n    peg$c26 = peg$classExpectation([\"\\\"\", \"\\\"\", \"\\\"\"], false, false),\n    peg$c27 = peg$anyExpectation(),\n    peg$c28 = /^[a-zA-Z_]/,\n    peg$c29 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], \"_\"], false, false),\n    peg$c30 = /^[a-zA-Z0-9_]/,\n    peg$c31 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], [\"0\", \"9\"], \"_\"], false, false),\n    peg$c32 = /^[0-9]/,\n    peg$c33 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n    peg$c34 = \".\",\n    peg$c35 = peg$literalExpectation(\".\", false),\n    peg$c36 = /^[ \\t\\n\\r]/,\n    peg$c37 = peg$classExpectation([\" \", \"\\t\", \"\\n\", \"\\r\"], false, false),\n    peg$c38 = \"//\",\n    peg$c39 = peg$literalExpectation(\"//\", false),\n    peg$c40 = /^[^\\n]/,\n    peg$c41 = peg$classExpectation([\"\\n\"], true, false),\n    peg$currPos = 0,\n    peg$savedPos = 0,\n    peg$posDetailsCache = [{\n      line: 1,\n      column: 1\n    }],\n    peg$maxFailPos = 0,\n    peg$maxFailExpected = [],\n    peg$silentFails = 0,\n    peg$result;\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos);\n    throw peg$buildStructuredError([peg$otherExpectation(description)], input.substring(peg$savedPos, peg$currPos), location);\n  }\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos);\n    throw peg$buildSimpleError(message, location);\n  }\n  function peg$literalExpectation(text, ignoreCase) {\n    return {\n      type: \"literal\",\n      text: text,\n      ignoreCase: ignoreCase\n    };\n  }\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return {\n      type: \"class\",\n      parts: parts,\n      inverted: inverted,\n      ignoreCase: ignoreCase\n    };\n  }\n  function peg$anyExpectation() {\n    return {\n      type: \"any\"\n    };\n  }\n  function peg$endExpectation() {\n    return {\n      type: \"end\"\n    };\n  }\n  function peg$otherExpectation(description) {\n    return {\n      type: \"other\",\n      description: description\n    };\n  }\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos],\n      p;\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n      details = peg$posDetailsCache[p];\n      details = {\n        line: details.line,\n        column: details.column\n      };\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n        p++;\n      }\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n      endPosDetails = peg$computePosDetails(endPos);\n    return {\n      start: {\n        offset: startPos,\n        line: startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line: endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) {\n      return;\n    }\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n    peg$maxFailExpected.push(expected);\n  }\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(peg$SyntaxError.buildMessage(expected, found), expected, found, location);\n  }\n  function peg$parseStart() {\n    var s0, s1, s2, s3;\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsestatement();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsestatement();\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    return s0;\n  }\n  function peg$parsestatement() {\n    var s0;\n    s0 = peg$parsevariableDeclaration();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseassignment();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseprintStatement();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseexpression();\n        }\n      }\n    }\n    return s0;\n  }\n  function peg$parsevariableDeclaration() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 3) === peg$c0) {\n      s1 = peg$c0;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c1);\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseidentifier();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 61) {\n              s5 = peg$c2;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c3);\n              }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseexpression();\n                if (s7 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 59) {\n                    s8 = peg$c4;\n                    peg$currPos++;\n                  } else {\n                    s8 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                      peg$fail(peg$c5);\n                    }\n                  }\n                  if (s8 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c6();\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    return s0;\n  }\n  function peg$parseassignment() {\n    var s0, s1, s2, s3, s4, s5, s6;\n    s0 = peg$currPos;\n    s1 = peg$parseidentifier();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 61) {\n          s3 = peg$c2;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c3);\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseexpression();\n            if (s5 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 59) {\n                s6 = peg$c4;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c5);\n                }\n              }\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c7();\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    return s0;\n  }\n  function peg$parseprintStatement() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c8) {\n      s1 = peg$c8;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c9);\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s3 = peg$c10;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c11);\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseexpression();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s7 = peg$c12;\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) {\n                    peg$fail(peg$c13);\n                  }\n                }\n                if (s7 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 59) {\n                    s8 = peg$c4;\n                    peg$currPos++;\n                  } else {\n                    s8 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                      peg$fail(peg$c5);\n                    }\n                  }\n                  if (s8 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c14();\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    return s0;\n  }\n  function peg$parseexpression() {\n    var s0;\n    s0 = peg$parseconcatenation();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsestringLiteral();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsenumber();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseidentifier();\n        }\n      }\n    }\n    return s0;\n  }\n  function peg$parseconcatenation() {\n    var s0, s1, s2, s3, s4, s5;\n    s0 = peg$currPos;\n    s1 = peg$parsestringLiteral();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 43) {\n          s3 = peg$c15;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c16);\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseexpression();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c17(s1, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    return s0;\n  }\n  function peg$parsestringLiteral() {\n    var s0, s1, s2, s3;\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 34) {\n      s1 = peg$c18;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c19);\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsestringCharacters();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 34) {\n          s3 = peg$c18;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c19);\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c20(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    return s0;\n  }\n  function peg$parsestringCharacters() {\n    var s0, s1;\n    s0 = [];\n    s1 = peg$parsestringCharacter();\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      s1 = peg$parsestringCharacter();\n    }\n    return s0;\n  }\n  function peg$parsestringCharacter() {\n    var s0, s1, s2;\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 92) {\n      s1 = peg$c21;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c22);\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      if (peg$c23.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c24);\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      peg$silentFails++;\n      if (peg$c25.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c26);\n        }\n      }\n      peg$silentFails--;\n      if (s2 === peg$FAILED) {\n        s1 = void 0;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.length > peg$currPos) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c27);\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s1 = [s1, s2];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n    return s0;\n  }\n  function peg$parseidentifier() {\n    var s0, s1, s2, s3;\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (peg$c28.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c29);\n      }\n    }\n    if (s2 !== peg$FAILED) {\n      s1 = input.substring(s1, peg$currPos);\n    } else {\n      s1 = s2;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$c30.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c31);\n        }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        if (peg$c30.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c31);\n          }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    return s0;\n  }\n  function peg$parsenumber() {\n    var s0, s1, s2, s3, s4, s5;\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = [];\n    if (peg$c32.test(input.charAt(peg$currPos))) {\n      s3 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s3 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c33);\n      }\n    }\n    if (s3 !== peg$FAILED) {\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        if (peg$c32.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c33);\n          }\n        }\n      }\n    } else {\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      s1 = input.substring(s1, peg$currPos);\n    } else {\n      s1 = s2;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s3 = peg$c34;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c35);\n        }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        if (peg$c32.test(input.charAt(peg$currPos))) {\n          s5 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c33);\n          }\n        }\n        if (s5 !== peg$FAILED) {\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            if (peg$c32.test(input.charAt(peg$currPos))) {\n              s5 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c33);\n              }\n            }\n          }\n        } else {\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s3 = [s3, s4];\n          s2 = s3;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    return s0;\n  }\n  function peg$parse_() {\n    var s0, s1;\n    s0 = [];\n    if (peg$c36.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c37);\n      }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$c36.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c37);\n        }\n      }\n    }\n    return s0;\n  }\n  function peg$parsecomment() {\n    var s0, s1, s2, s3;\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c38) {\n      s1 = peg$c38;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c39);\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$c40.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c41);\n        }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        if (peg$c40.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c41);\n          }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    return s0;\n  }\n  peg$result = peg$startRuleFunction();\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n    throw peg$buildStructuredError(peg$maxFailExpected, peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null, peg$maxFailPos < input.length ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1) : peg$computeLocation(peg$maxFailPos, peg$maxFailPos));\n  }\n}\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse: peg$parse\n};","map":{"version":3,"names":["peg$subclass","child","parent","ctor","constructor","prototype","peg$SyntaxError","message","expected","found","location","name","Error","captureStackTrace","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","text","class","escapedParts","i","parts","length","Array","classEscape","inverted","any","end","other","description","hex","ch","charCodeAt","toString","toUpperCase","s","replace","describeExpectation","type","describeExpected","descriptions","j","sort","slice","join","describeFound","peg$parse","input","options","peg$FAILED","peg$startRuleFunctions","Start","peg$parseStart","peg$startRuleFunction","peg$c0","peg$c1","peg$literalExpectation","peg$c2","peg$c3","peg$c4","peg$c5","peg$c6","identifier","value","expression","peg$c7","peg$c8","peg$c9","peg$c10","peg$c11","peg$c12","peg$c13","peg$c14","peg$c15","peg$c16","peg$c17","left","right","peg$c18","peg$c19","peg$c20","chars","peg$c21","peg$c22","peg$c23","peg$c24","peg$classExpectation","peg$c25","peg$c26","peg$c27","peg$anyExpectation","peg$c28","peg$c29","peg$c30","peg$c31","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$currPos","peg$savedPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","peg$result","startRule","substring","peg$computeLocation","peg$buildStructuredError","peg$otherExpectation","error","peg$buildSimpleError","ignoreCase","peg$endExpectation","peg$computePosDetails","pos","details","p","startPos","endPos","startPosDetails","endPosDetails","start","offset","peg$fail","push","s0","s1","s2","s3","peg$parse_","peg$parsestatement","peg$parsevariableDeclaration","peg$parseassignment","peg$parseprintStatement","peg$parseexpression","s4","s5","s6","s7","s8","substr","peg$parseidentifier","peg$parseconcatenation","peg$parsestringLiteral","peg$parsenumber","peg$parsestringCharacters","peg$parsestringCharacter","test","charAt","peg$parsecomment","module","exports","SyntaxError","parse"],"sources":["/Users/johanfortus/Documents/Projects/Verse Playground/src/verse-parser.js"],"sourcesContent":["/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { Start: peg$parseStart },\n      peg$startRuleFunction  = peg$parseStart,\n\n      peg$c0 = \"var\",\n      peg$c1 = peg$literalExpectation(\"var\", false),\n      peg$c2 = \"=\",\n      peg$c3 = peg$literalExpectation(\"=\", false),\n      peg$c4 = \";\",\n      peg$c5 = peg$literalExpectation(\";\", false),\n      peg$c6 = function() {\n          return { type: \"VariableDeclaration\", name: identifier, value: expression };\n        },\n      peg$c7 = function() {\n          return { type: \"Assignment\", name: identifier, value: expression };\n        },\n      peg$c8 = \"Print\",\n      peg$c9 = peg$literalExpectation(\"Print\", false),\n      peg$c10 = \"(\",\n      peg$c11 = peg$literalExpectation(\"(\", false),\n      peg$c12 = \")\",\n      peg$c13 = peg$literalExpectation(\")\", false),\n      peg$c14 = function() {\n          return { type: \"PrintStatement\", value: expression };\n        },\n      peg$c15 = \"+\",\n      peg$c16 = peg$literalExpectation(\"+\", false),\n      peg$c17 = function(left, right) {\n          return { type: \"Concatenation\", left: left, right: right };\n        },\n      peg$c18 = \"\\\"\",\n      peg$c19 = peg$literalExpectation(\"\\\"\", false),\n      peg$c20 = function(chars) {\n          return { type: \"StringLiteral\", value: chars.join(\"\") };\n        },\n      peg$c21 = \"\\\\\",\n      peg$c22 = peg$literalExpectation(\"\\\\\", false),\n      peg$c23 = /^[\"\\\\\" \"\"\"]/,\n      peg$c24 = peg$classExpectation([\"\\\"\", \"\\\\\", \"\\\"\", \" \", \"\\\"\", \"\\\"\", \"\\\"\"], false, false),\n      peg$c25 = /^[\"\"\"]/,\n      peg$c26 = peg$classExpectation([\"\\\"\", \"\\\"\", \"\\\"\"], false, false),\n      peg$c27 = peg$anyExpectation(),\n      peg$c28 = /^[a-zA-Z_]/,\n      peg$c29 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], \"_\"], false, false),\n      peg$c30 = /^[a-zA-Z0-9_]/,\n      peg$c31 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], [\"0\", \"9\"], \"_\"], false, false),\n      peg$c32 = /^[0-9]/,\n      peg$c33 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n      peg$c34 = \".\",\n      peg$c35 = peg$literalExpectation(\".\", false),\n      peg$c36 = /^[ \\t\\n\\r]/,\n      peg$c37 = peg$classExpectation([\" \", \"\\t\", \"\\n\", \"\\r\"], false, false),\n      peg$c38 = \"//\",\n      peg$c39 = peg$literalExpectation(\"//\", false),\n      peg$c40 = /^[^\\n]/,\n      peg$c41 = peg$classExpectation([\"\\n\"], true, false),\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parseStart() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsestatement();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsestatement();\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsestatement() {\n    var s0;\n\n    s0 = peg$parsevariableDeclaration();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseassignment();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseprintStatement();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseexpression();\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsevariableDeclaration() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 3) === peg$c0) {\n      s1 = peg$c0;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c1); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseidentifier();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 61) {\n              s5 = peg$c2;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c3); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseexpression();\n                if (s7 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 59) {\n                    s8 = peg$c4;\n                    peg$currPos++;\n                  } else {\n                    s8 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c5); }\n                  }\n                  if (s8 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c6();\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseassignment() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    s1 = peg$parseidentifier();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 61) {\n          s3 = peg$c2;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c3); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseexpression();\n            if (s5 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 59) {\n                s6 = peg$c4;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c5); }\n              }\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c7();\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseprintStatement() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c8) {\n      s1 = peg$c8;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c9); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s3 = peg$c10;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c11); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseexpression();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s7 = peg$c12;\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c13); }\n                }\n                if (s7 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 59) {\n                    s8 = peg$c4;\n                    peg$currPos++;\n                  } else {\n                    s8 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c5); }\n                  }\n                  if (s8 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c14();\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseexpression() {\n    var s0;\n\n    s0 = peg$parseconcatenation();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsestringLiteral();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsenumber();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseidentifier();\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseconcatenation() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parsestringLiteral();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 43) {\n          s3 = peg$c15;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c16); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseexpression();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c17(s1, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsestringLiteral() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 34) {\n      s1 = peg$c18;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c19); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsestringCharacters();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 34) {\n          s3 = peg$c18;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c19); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c20(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsestringCharacters() {\n    var s0, s1;\n\n    s0 = [];\n    s1 = peg$parsestringCharacter();\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      s1 = peg$parsestringCharacter();\n    }\n\n    return s0;\n  }\n\n  function peg$parsestringCharacter() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 92) {\n      s1 = peg$c21;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c22); }\n    }\n    if (s1 !== peg$FAILED) {\n      if (peg$c23.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c24); }\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      peg$silentFails++;\n      if (peg$c25.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c26); }\n      }\n      peg$silentFails--;\n      if (s2 === peg$FAILED) {\n        s1 = void 0;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.length > peg$currPos) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c27); }\n        }\n        if (s2 !== peg$FAILED) {\n          s1 = [s1, s2];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseidentifier() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (peg$c28.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c29); }\n    }\n    if (s2 !== peg$FAILED) {\n      s1 = input.substring(s1, peg$currPos);\n    } else {\n      s1 = s2;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$c30.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c31); }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        if (peg$c30.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c31); }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsenumber() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = [];\n    if (peg$c32.test(input.charAt(peg$currPos))) {\n      s3 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s3 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c33); }\n    }\n    if (s3 !== peg$FAILED) {\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        if (peg$c32.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c33); }\n        }\n      }\n    } else {\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      s1 = input.substring(s1, peg$currPos);\n    } else {\n      s1 = s2;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s3 = peg$c34;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c35); }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        if (peg$c32.test(input.charAt(peg$currPos))) {\n          s5 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c33); }\n        }\n        if (s5 !== peg$FAILED) {\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            if (peg$c32.test(input.charAt(peg$currPos))) {\n              s5 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c33); }\n            }\n          }\n        } else {\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s3 = [s3, s4];\n          s2 = s3;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parse_() {\n    var s0, s1;\n\n    s0 = [];\n    if (peg$c36.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c37); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$c36.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c37); }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecomment() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c38) {\n      s1 = peg$c38;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c39); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$c40.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c41); }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        if (peg$c40.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c41); }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}